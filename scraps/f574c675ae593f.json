{
  "title": "おもしろor役立ちコマンド集合〜",
  "closed": false,
  "archived": false,
  "created_at": "2020-12-08",
  "comments": [
    {
      "author": "kumamoto",
      "created_at": "2020-12-08",
      "body_markdown": "# curl\n## 参考\n- [【 curl 】コマンド/Linux基本コマンド](https://www.atmarkit.co.jp/ait/articles/1606/22/news030.html)\n- [開発効率爆上がり curl + jq コマンド入門講座 3:15~](https://www.youtube.com/watch?v=-HohpQP-lwU&t=299s)\n- [curlコマンドの使い方　～GET、POST、REST（json）の確認と、windowsでの利用手順](https://viral-community.com/security/curl-8263/)\n- [curlコマンドで覚えておきたい使い方14個](https://orebibou.com/ja/home/201603/20160325_001/)\n- [What is the difference between cookie and cookiejar?](https://stackoverflow.com/questions/31270461/what-is-the-difference-between-cookie-and-cookiejar)\n\n## 概要\n**さまざまなプロトコルでファイルをダウンロード/転送するコマンド**\n※関連:wgetコマンド\n\n## オプション\n- ダウンロードして標準出力\n\n## 重要(これくらい覚えとけシリーズ)\n###  一番基本のGETメソッド\n\n```\ncurl https://www.google.co.jp/\n```\n\n### -I(--head)オプション：レスポンスのHTTPヘッダーの確認(GET以外でも使用可能)\n>  Fetch the headers only! \n```\ncurl -I https://www.google.co.jp/\n```\n![](https://storage.googleapis.com/zenn-user-upload/iiyjg8nejxozs6qm0guos9behbea)\n\nちなみにオプションは下記のようにお尻に回しても問題なさそう\n```\ncurl https://www.google.co.jp/ -I \n```\n\n### -vオプション：リクエスト＆レスポンスのHTTPヘッダー確認や接続先サーバーのSSL証明書の情報など\n\n```\ncurl https://www.google.co.jp/ -v\n```\n\n### -Fオプション：POSTする\n> For HTTP protocol family, this lets curl emulate  a  filled-in form  in  which  a user has pressed the submit button. This causes curl to POST data using the Content-Type multipart/form-data according to RFC 2388.\n\n> HTTP プロトコル ファミリでは、このCurlのFオプションにより、ユーザーが送信ボタンを押した入力フォームをエミュレートすることができます。これにより、Curl は RFC 2388 に従った Content-Type multipart/form-data を使用してデータを POST します。\n※[content-typeとは MDN](https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/Content-Type)\n※[MIME タイプ (IANA メディアタイプ) MDN](https://developer.mozilla.org/ja/docs/Web/HTTP/Basics_of_HTTP/MIME_types)\n\n```\ncurl -F \"name=value\" http://対象のURL\n```\n\nファイルを贈りたい時は下記のように\n\n```\ncurl -F \"name=@PATH\" http://対象のURL\n```\n\n### -X(--request)オプション：リクエストメソッドの指定\n\n### -H(--header)オプション：リクエストのHTTPヘッダーの設定\n\n> (HTTP) Extra header to include in the request when sending HTTP  to  a  server.You may specify any number of extra headers. \n>  (HTTP) サーバーに HTTP を送信する際にリクエストに含める追加のヘッダーです。任意の数の追加ヘッダーを指定することができます。\n\n>Note that if you should add a custom header that has the same name as one of the internal ones curl  would  use, your  externally  set  header  will  be  used instead of the internal one. \n>curl が使用する内部ヘッダーと同じ名前のカスタムヘッダーを追加した場合、内部ヘッダーの代わりに外部設定されたヘッダーが使用されることに注意してください。\n\n>This allows you to make even trickier stuff than curl would normally do. You should not  replace  internally set headers without knowing perfectly well what you're doing. Remove an internal header by giving a replacement without content on the right  side of the colon, as in: -H \"Host:\". \n\n>これにより、Curl が通常行うよりもさらにトリッキーなものを作ることができます。何をしているのかを完全に理解していない状態で内部的にセットされたヘッダを置き換えるべきではありません。内部ヘッダを削除するには、次のようにコロンの右側に内容のない置き換えを指定します。-H \"Host:\" のように、コロンの右側に内容のない置き換えを与えることで、内部ヘッダを削除します。\n\n>If you send the custom header with no-value then its header must be terminated with a semicolon, such  as  -H  \"X-Custom-Header;\" to send \"X-Custom-Header:\".\n\n>カスタムヘッダを値なしで送信する場合、そのヘッダはセミコロンで終了しなければなりません。例えば\"X-Custome-Header;\"という感じで。\n\n### -d(--data)オプション：リクエストのHTTPボディの設定\n\n以上の-X(--request)、-H(--header)、-d(--data)オプションを使用した例が下記。\n\n```\ncurl -X POST -H \"Content-Type: application/json\" -d '{\"Name\":\"sensuikan1973\", \"Age\":\"100\"}' localhost:8080/api/v1/users\n```\n※-H “x-authkey:aaa”　：　個人的に任意に設定したヘッダーになります（無くても良い）\n\n※-d “{“companyId”:”abc”,”memberId”:111,”plan”:5}”　だとエラーになります。オブジェクト内の「”」については、「\\」を付けてエスケープ（文字列化）してやる必要があります。\n\n```\ncurl -X POST https://aaa.com/index.php -H “Content-Type:application/json” -H “x-authkey:aaa” -d “{\\”companyId\\”:\\”abc\\”,\\”memberId\\”:111,\\”plan\\”:5}”\n```\n\n\n上記2つはREST（json形式）メソッド。API通信に一般的に使われているRESTリクエストで、json形式のデータを送る場合。\n\n```\ncurl -X POST https://aaa.com/index.php -H “Content-Type: application/x-www-form-urlencoded” –data “host=aaa.ne.jp&user=admin&password=passadmin”\n```\n\n※「content-type　=　application/x-www-form-urlencoded」の場合、「–data　オプション」でリクエストボディを設定します。\n\n### -L(--location)：リダイレクトを有効に\n>  (HTTP)  If  the server reports that the requested page has moved to a different location (indicated with a Location: header and  a  3XX  response  code),  this option  will make curl redo the request on the new place. If used together with -i, --include or -I, --head, headers from all requested pages  will  be  shown.\n\n>  (HTTP) サーバーが要求されたページが別の場所に移動したことを報告する場合 (Location: ヘッダーと 3XX レスポンス コードで示されます)、このオプションを使用すると、curl は新しい場所で要求をやり直します。i、--include または -I、--head と一緒に使用すると、すべてのリクエストされたページのヘッダーが表示されます。\n※認証関連の話は省略。\n\n### -k：オレオレ証明書(未確認！！！！)\n\n```\ncurl -X POST https://aaa.co.jp/admin -k\n```\n\n### -s：進捗を非表示にする\n\n### -C：途中で中断したダウンロードの再開\n\n### --limit-rate：転送速度に制限をかける\n\n### --anyauth：認証を行う\n\n```\ncurl --anyauth --user ユーザ名:パスワード http://対象のURL\n```\n※Basic認証及び、その他の認証について行ってアクセス\n\n### -f：400番台のエラーコード時に異常終了\n通常は400番台エラーでも正常終了(exit0)として扱われる。\n\n```\ncurl -f http://対象のURL\n```\n\n### -c(--cookie-jar)と-b(--cocke)：Cookieを用いてログイン情報を保存する\n\n>  (HTTP)  Specify  to  which file you want curl to write all cookies after a completed operation. Curl writes all cookies from its in-memory cookie storage  to the  given file at the end of operations. If no cookies are known, no data will be written. The file will be written using the Netscape cookie file format.  If you  set  the  file  name to a single dash, \"-\", the cookies will be written to stdout.\n\n>  (HTTP) 操作が完了した後にすべてのクッキーをどのファイルに書き込むかを指定します。Curl は操作の終了時に、そのインメモリクッキーストレージから指定されたファイルにすべてのクッキーを書き込みます。クッキーが知られていない場合は、データは書き込まれません。Netscapeのクッキーファイル形式で書き込まれます。 ファイル名を一本のダッシュ「-」に設定すると、クッキーは標準出力に書き込まれます。\n\n> This command line option will activate the cookie engine that makes curl record and  use cookies. Another way to activate it is to use the -b, --cookie option.\n\n> このコマンド ライン オプションは、curl の記録とクッキーの使用を行うクッキー エンジンを有効にします。これを有効にするもう一つの方法は、-b, --cookie オプションを使用することです。\n\n> If the cookie jar can't be created or written  to,  the  whole  curl  operation won't  fail  or  even  report  an error clearly. Using -v, --verbose will get a warning displayed, but that is the only visible feedback  you  get  about  this possibly lethal situation. If  this  option  is  used  several times, the last specified file name will be used.\n\n> クッキー jar を作成または書き込むことができない場合、curl 操作全体が失敗したり、エラーを明確に報告したりすることはありません。v, --verbose を使用すると警告が表示されますが、これはこの致命的な状況についての唯一の目に見えるフィードバックです。このオプションが複数回使用された場合、最後に指定されたファイル名が使用されます。\n\n```\ncurl -c cookie.txt -d 'username=ユーザ名' -d 'password=パスワード' http://対象のログインURL\ncurl -b cookie.txt http://ログイン後に情報を取得するページ\n```\n\n### -A：UserAgentを偽装する\n\n```\ncurl -A \"偽装するUserAgent\" http://対象のURL\n```\n\n※UserAgent：ブラウザがWebサーバーにデータを取りに行く際にサーバーに対して自動的に通知している、ブラウザの種類やバージョンやOSの種類やバージョンなどの情報を組み合わせた識別子。\n\n### -w：レスポンスタイムを取得する\n\n```\ncurl https://対象のURL -o /dev/null -w \"%{http_code}\\t%{time_total}\\n\" 2> /dev/null\n```\n\n### {}内でカンマ区切り：連続ダウンロード\n\n```\ncurl https://example.com/[000-100].html # [000-100]までのhtmlファイルへ連続リクエスト\ncurl https://example.com/{a,b,c}.html # ブレース展開のように指定できるので、a.html,b.html,c.htmlへアクセス\n```\n\n## Tips\n- 自分のグローバルip知りたい\n`$ curl ipinfo.io`\n- QRコード作りたい\n`$ curl qrenco.de/QRコードにしたい文字列orURL`\n- 各国の天気を見る\n`$ curl wttr.in [japan]`\n- ビットコインの値段を見る\n`$ curl rate.sx`\n- スターウォーズをアスキーアートアニメ\n`$ curl https://asciitv.fr`\n![](https://storage.googleapis.com/zenn-user-upload/hv7zkjw0p6s4wrd3iuawnhctoeai)\n- nyan-catのアスキーアートアニメ\n`$ curl https://ascii.live/nyan`\n",
      "body_updated_at": "2021-02-25"
    },
    {
      "author": "kumamoto",
      "created_at": "2020-12-08",
      "body_markdown": "# jq\n## 参考\n- [jq Manual](https://stedolan.github.io/jq/manual/)\n- [jq コマンドを使う日常のご紹介/Qiita](https://qiita.com/takeshinoda@github/items/2dec7a72930ec1f658af)\n\n## 概要\nJSONから簡単に値を抜き出したり、集計したり、整形して表示したりできるJSON用のgrepとかawkみたいなコマンド。\nJSON { \"hoge\": \"value\" } があった場合、 . がルート {} を表す。\n例).hoge で \"value\"\n\n下記のコマンドでインストールしてみてください。\n`$ brew install jq`\n\n## Tips\n```\n$ echo '{\"items\":[{\"item_id\":1,\"name\":\"すてきな雑貨\",\"price\":2500},{\"item_id\":2,\"name\":\"格好いい置物\",\"price\":4500}]}' \\\n| jq '.items[].name'\n\"すてきな雑貨\"\n\"格好いい置物\"\n```\n※`jq -r`でダブルクォート消える\n※下記のようにパイプでも渡せる\n`jq -r '.items[] | .name'`\n"
    }
  ]
}